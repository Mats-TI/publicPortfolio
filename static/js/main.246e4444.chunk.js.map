{"version":3,"sources":["logo.svg","Components/Media/MainDC.jpg","Components/Media/gallery_logo.png","Components/Media/Chess pic.jpg","Components/projects.js","Components/Contact.js","Components/wrapper.js","Components/mainNav.js","App.js","serviceWorker.js","index.js"],"names":["Projects","className","id","href","src","Chess_img","alt","title","DCproject","Gallery_img","Component","Contact","formValidation","isError","errors","errorName","errorEmail","errorSubject","errorMessage","state","yourName","length","yourSubject","Email","includes","Message","setState","onChangeName","event","target","value","onChangeSubject","onChangeMail","onChangeMsg","dataHandler","preventDefault","formErrors","axios","post","then","res","console","log","catch","error","sent","action","onSubmit","this","bind","type","name","onChange","React","Wrapper","Headers","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.246e4444.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/MainDC.0a5a0266.jpg\";","export default __webpack_public_path__ + \"static/media/gallery_logo.e39553c7.png\";","export default __webpack_public_path__ + \"static/media/Chess pic.2edb95c2.jpg\";","import React, {Component} from 'react'\r\nimport './style.css'\r\nimport DCproject from \"./Media/MainDC.jpg\"\r\nimport Gallery_img from \"./Media/gallery_logo.png\"\r\nimport Chess_img from './Media/Chess pic.jpg'\r\n\r\nclass Projects extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <div className='projectsDiv' id=\"ProID\">\r\n            <h1 className=\"h1\">My Projects</h1>\r\n            <section className='projectSection'>\r\n                <div><a href='https://thapza101.github.io/chessSite/'><img className='site2' src={Chess_img} alt='chess website' title=\"A Chess club Website\" /></a></div>\r\n                <div><a href='https://thapza101.github.io/DCGame/'><img className='site1' src={DCproject} alt='DCgame' title=\"A DC Quiz Game\"/></a></div>\r\n                \r\n                <div><a href=\"https://thapza101.github.io/gallery\"><img className=\"site3\" src={Gallery_img} alt=\"Prime Gallery Builder\" title=\"A Galley builder\"/></a></div>\r\n            \r\n            </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Projects","/* eslint-disable eqeqeq */\r\n/* eslint-disable no-useless-constructor */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { createRef } from 'react'\r\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom'\r\nimport './style.css'\r\nimport axios from 'axios'\r\n\r\nclass Contact extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            yourName:\"\",\r\n            yourSubject:\"\",\r\n            Email:\"\",\r\n            Message:\"\",\r\n            sent:false,\r\n            errorName:'',\r\n            errorEmail:'',\r\n            errorSubject:\"\",\r\n            errorMessage:\"\"\r\n        }\r\n    }formValidation=()=>{\r\n        let isError=false;\r\n        const errors={\r\n            errorName:'',\r\n             errorEmail:'',\r\n                errorSubject:\"\",\r\n                errorMessage:\"\"\r\n        };\r\n        if (this.state.yourName.length===0){\r\n            isError=true;\r\n            errors.errorName=\"Name cannot be blank \";\r\n        }\r\n        if (this.state.yourSubject.length===0){\r\n            isError=true;\r\n            errors.errorSubject=\"Subject cannot be blank \";\r\n        }\r\n        if (!this.state.Email.includes(\"@\")){\r\n            isError=true;\r\n            errors.errorEmail=\"Invalid Email. Your Email should be of the form John@Doe.domain\";\r\n        }\r\n        if (this.state.Message.length===0){\r\n            isError=true;\r\n            errors.errorMessage=\"Message cannot be blank\";\r\n        }\r\n        this.setState({\r\n           ...this.state,\r\n           ...errors\r\n        } )\r\n        return(isError);\r\n    }\r\n\r\n    onChangeName=(event)=>{\r\n        this.setState({\r\n            yourName:event.target.value\r\n        })\r\n    }\r\n    onChangeSubject=(event)=>{\r\n        this.setState({\r\n            yourSubject:event.target.value\r\n        })\r\n    }\r\n    onChangeMail=(event)=>{\r\n        this.setState({\r\n            Email:event.target.value\r\n        })\r\n    }\r\n    onChangeMsg=(event)=>{\r\n        this.setState({\r\n            Message:event.target.value\r\n        })\r\n    }\r\n    dataHandler=(event)=>{\r\n        event.preventDefault();\r\n        const formErrors=this.formValidation();\r\n        //if !formErrors or formErrors evaluates to false, proceed to clear the form.\r\n        if (!formErrors){\r\n            this.setState({\r\n                yourName:'',\r\n                yourSubject:\"\",\r\n                Email:\"\",\r\n                Message:'',\r\n                errorName:'',\r\n                errorEmail:'',\r\n                errorSubject:\"\",\r\n                errorMessage:\"\"\r\n              \r\n        })\r\n        }\r\n\r\n        //if formErrors evaluates to false, proceed to make an http call.\r\n        if (!formErrors){\r\n\r\n        axios.post(\"https://still-dusk-29985.herokuapp.com/api/forms\",this.state)\r\n        .then((res)=>{\r\n            console.log(res);\r\n        })\r\n        .catch((error)=>{console.log(`Message not sent because of ${error}`)});\r\n        this.setState({\r\n            sent:true\r\n        })\r\n    }\r\n\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div id='ContactID' className='contactDiv'>\r\n                <section className='contactSection'>\r\n                    <h1 className=\"h1\">Get in Touch</h1>\r\n                    <p>\r\n                        Feel free to use the contact form for any questions, comments or just feedback in general. If necessary, I will get back to you as soon as possible.\r\n                    </p>\r\n                </section>\r\n                <form action=\"http://stackoverflow.com/questions/2604530/answer/submit\" onSubmit={this.dataHandler.bind(this)} id=\"contactForm\">\r\n                    <label>Name: </label><input type=\"text\" name='yourName' value={this.state.yourName} onChange={this.onChangeName.bind(this)}></input>\r\n                    <div className=\"error-msgs\">{this.state.errorName}</div>\r\n                    <label>Subject: </label><input type='text' name='yourSubject' value={this.state.yourSubject} onChange={this.onChangeSubject.bind(this)}></input>\r\n                    <div className=\"error-msgs\">{this.state.errorSubject}</div>\r\n                    <label>Email Address: </label><input type='text' name=\"Email\" value={this.state.Email} onChange={this.onChangeMail.bind(this)}></input>\r\n                    <div className=\"error-msgs\">{this.state.errorEmail}</div>\r\n                    <label>Message: </label><textarea name='Message' value={this.state.Message} onChange={this.onChangeMsg.bind(this)}></textarea>\r\n                    <div className=\"error-msgs\">{this.state.errorMessage}</div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div></div>\r\n                    <button type=\"submit\">Submit</button>\r\n                    \r\n                    <div className={this.state.sent ? \"confirmationAppear\":\"submission\"}>\r\n                        <h3>Your E-mail has been successfully sent!</h3>\r\n                    </div>\r\n                    </form>\r\n                    <br></br>\r\n                    <br></br>\r\n                    <br></br>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n};\r\nexport default Contact","/* eslint-disable no-useless-constructor */\r\n/* eslint-disable no-unused-vars */\r\nimport React, {Component} from 'react'\r\nimport './style.css'\r\nimport Projects from './projects'\r\nimport DCproject from './Media/MainDC.jpg'\r\nimport {BrowserRouter as Router, Link, Route, Redirect} from 'react-router-dom'\r\nimport ReactDOM from 'react-dom'\r\nimport Contact from './Contact'\r\n\r\n\r\nclass Wrapper extends React.Component{\r\n    constructor(){\r\n        super()\r\n    }\r\n    \r\n    render(){\r\n    return(\r\n        <Router>\r\n        <div>\r\n            <div className=\"Wrapper\" id='Home'>\r\n                <h1>The name is Thapelo, pleased to make your acquintance.</h1>\r\n                <div className=\"info\">\r\n                <p className=\"p1\">I am a Front-end Developer with proficiency in HTML5, CSS3, Vanilla Javascript and React.js library.</p>\r\n                <p className=\"p1\">My other konwledge areas include server-side scripting in Node.js runtime environment and MySQL Database Management System.</p>\r\n                 <p className=\"p1\">Feel free to have a look at my constantly improving work under the <a href=\"#ProID\" >Projects</a> section.</p>\r\n            </div>\r\n            </div>\r\n            <Projects />\r\n            <Contact />\r\n        \r\n        </div>\r\n        </Router>\r\n\r\n\r\n            \r\n    )\r\n    }\r\n}\r\n\r\nexport default Wrapper\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport './style.css'\r\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom'\r\nimport Projects from './projects'\r\nimport Wrapper from './wrapper'\r\n\r\n\r\nfunction Headers(){\r\n    return(\r\n        <Router>\r\n        <div id='mainNav'>\r\n            <ul>\r\n                <li><Link to='/'>Home</Link></li>\r\n                <li><Link to='/projects'>My Projects</Link></li>\r\n                <li>About</li>\r\n                <li>Get in touch</li>\r\n            </ul>\r\n        </div>    \r\n        </Router>\r\n    )\r\n}\r\nexport default Headers","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './Components/mainNav';\nimport Wrapper from './Components/wrapper';\nimport Projects from './Components/projects';\nimport {BrowserRouter as Router, Link, Route} from 'react-router-dom';\nimport './Components/style.css';\n\nfunction App() {\n\n  return (\n    <Router>\n    <div className=\"App\">\n    <div id='mainNav'>\n            <ul>\n                <li><a href=\"#Home\">Home</a></li>\n                <li><a href=\"#ProID\">My Projects</a></li>\n                <li><a href=\"#ContactID\">Get in touch</a></li>\n            </ul>    \n      </div>\n      <Route path='/publicPortfolio' exact component={Wrapper} />\n      \n    </div>\n    </Router>\n  )\n  }\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}